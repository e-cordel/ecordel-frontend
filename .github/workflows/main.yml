name: deploy-to-ftp

on:
  push:
    branches: [main]

  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: "14.x"
      - name: Install Dependencies
        run: |
          npm install -g yarn
          yarn install --frozen-lockfile
      - name: Build
        run: yarn build
      - shell: bash
        run: |
          tar -zcf dist.tar.gz ./.next/
      - name: Upload cordel-web artifact
        uses: actions/upload-artifact@v2
        with:
          name: ecordel-web
          path: dist.tar.gz
  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: [build]
  #   steps:
  #     - name: Download ecordel-web artifact
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: ecordel-web
  #     - shell: bash
  #       run: |
  #         tar -zxf dist.tar.gz
  #     - name: FTP deployment
  #       uses: SamKirkland/FTP-Deploy-Action@4.0.0
  #       with:
  #         server: ${{ secrets.FTP_SERVER }}
  #         username: ${{ secrets.FTP_USER }}
  #         password: ${{ secrets.FTP_PASSWORD }}
  #         local-dir: ./dist/ecordel-web/
  #         exclude: .ftpquota .htaccess .well-known
